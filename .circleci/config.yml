
version: 2
jobs:
  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/cci-demo-clojure # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/clojure:lein-2.7.1 # ...with this image as the primary container; this is where all `steps` will run
    environment: # environment variables for primary container
      LEIN_ROOT: nbd
      JVM_OPTS: -Xmx3200m # limit the maximum heap size to prevent out of memory errors
    steps: # commands that comprise the `build` job
      - checkout # check out source code to working directory
      - restore_cache: # restores saved cache if checksum hasn't changed since the last run
          key: cci-demo-clojure-{{ checksum "project.clj" }}
      - run: lein deps
      - save_cache: # generate and store cache in the .m2 directory using a key template
          paths:
            - ~/.m2
          key: cci-demo-clojure-{{ checksum "project.clj" }}
      - run: lein uberjar
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: target/uberjar/cci-demo-clojure.jar
          destination: uberjar
  test:
    working_directory: ~/cci-demo-clojure
    docker:
      - image: circleci/clojure:lein-2.7.1
        environment:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/cljat-test
      - image: postgres:latest
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cljat-test
    environment:
      LEIN_ROOT: nbd
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: cci-demo-clojure-{{ checksum "project.clj" }}
      - run: lein deps
      - save_cache:
          paths:
            - ~/.m2
          key: cci-demo-clojure-{{ checksum "project.clj" }}
      - run: lein do test
  lint:
    working_directory: ~/cci-demo-clojure
    docker:
      - image: circleci/clojure:lein-2.7.1
        environment:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/cljat-test
    environment:
      LEIN_ROOT: nbd
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: cci-demo-clojure-{{ checksum "project.clj" }}
      - run: lein deps
      - save_cache:
          paths:
            - ~/.m2
          key: cci-demo-clojure-{{ checksum "project.clj" }}
      - run: lein kibit
      - run: lein cljfmt check
      - run: lein eastwood
workflows:
  version: 2
  build_test_lint:
    parallelism: 4
    jobs:
      - build
      - test
      - lint
